{"version":3,"sources":["components/Header.js","utils/Api.js","utils/utils.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","React","Component","baseURL","token","this","_baseURL","_token","url","options","fetch","then","res","ok","json","Promise","reject","status","_fetchData","headers","authorization","formData","method","body","JSON","stringify","id","liked","link","avatar","Card","props","handleClick","onCardClick","card","type","onClick","aria-label","name","likes","length","Main","state","userName","userDescription","userAvatar","cards","all","api","getUserInfo","getInitialCards","about","initialCards","setState","catch","error","console","log","onEditAvatar","onEditProfile","onAddPlace","map","key","_id","Footer","PopupWithForm","isOpen","noValidate","title","children","onClose","ImagePopup","App","handleEditAvatarClick","isEditAvatarPopupOpen","handleEditProfileClick","isEditProfilePopupOpen","handleAddPlaceClick","isAddPlacePopupOpen","handleCardClick","selectedCard","closeAllPopups","placeholder","required","minLength","maxLength","pattern","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.fe3fc0ab.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <img className=\"header__logo\" src={logo} alt=\"Логотип Место.\" />\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","import {baseURL, token} from './utils.js';\n\nclass Api {\n  constructor(baseURL, token) {\n    this._baseURL = baseURL;\n    this._token = token;\n  }\n\n  _fetchData(url, options) {\n    return fetch(this._baseURL + url, options)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  getUserInfo() {\n    return this._fetchData('/users/me', {\n      headers: {\n        authorization: this._token\n      }\n    })\n  }\n\n  updateUserInfo(formData) {\n    return this._fetchData('/users/me', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n  }\n\n  getInitialCards() {\n    return this._fetchData('/cards', {\n      headers: {\n        authorization: this._token\n      }\n    })\n  }\n\n  uploadCard(formData) {\n    return this._fetchData('/cards', {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n  }\n\n  likeCard(id, liked) {\n    let method;\n    if (liked) {\n      method = 'DELETE';\n    } else {\n      method = 'PUT';\n    }\n    return this._fetchData('/cards/likes/' + id, {\n      method: method,\n      headers: {\n        authorization: this._token\n      }\n    })\n  }\n\n  deleteCard(id) {\n    return this._fetchData('/cards/' + id, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    })\n  }\n\n  changeAvatar(link) {\n    return this._fetchData('/users/me/avatar', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: link\n      })\n    })\n  }\n}\n\nexport default new Api(baseURL, token);\n","//Для валидации форм\nexport const validationProperties = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__save-button',\n  inactiveButtonClass: 'popup__save-button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  textErrorClass: 'popup__input-error_visible'\n};\n\n//Базовый URL для запросов\nexport const baseURL = 'https://mesto.nomoreparties.co/v1/cohort-12';\nexport const token = 'd20b4294-3a82-4b74-a8d9-f1654e520eb0';\n","import React from 'react';\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleClick = () => {\n    this.props.onCardClick(this.props.card);\n  }\n\n  render() {\n    return (\n      <div className=\"elements__item\">\n        <button className=\"elements__image-button\" type=\"button\" onClick={this.handleClick} aria-label=\"Увеличить изображение.\">\n          <img className=\"elements__image\" src={this.props.card.link} />\n        </button>\n        <div className=\"elements__container\">\n          <h2 className=\"elements__heading\">{this.props.card.name}</h2>\n          <div className=\"elements__like-container\">\n            <button className=\"elements__like-button\" type=\"button\" aria-label=\"Поставить лайк.\"></button>\n            <p className=\"elements__like-counter\">{this.props.card.likes.length}</p>\n          </div>\n        </div>\n        <button className=\"elements__delete-button\" type=\"button\" aria-label=\"Удалить фото.\"></button>\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React from 'react';\nimport api from '../utils/Api.js';\nimport Card from './Card.js';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: '',\n      userDescription: '',\n      userAvatar: '',\n      cards: []\n    };\n  }\n\n  componentDidMount() {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([{ name, about, avatar }, initialCards]) => {\n        this.setState({\n          userName: name,\n          userDescription: about,\n          userAvatar: avatar,\n          cards: initialCards\n        })\n      })\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    return (\n      <main className=\"content\">\n        <section className=\"profile\">\n          <button className=\"profile__avatar-button\" type=\"button\" onClick={this.props.onEditAvatar} aria-label=\"Изменить аватар.\">\n            <img className=\"profile__avatar\" alt=\"Аватар пользователя.\" src={this.state.userAvatar} />\n          </button>\n          <div className=\"profile__info\">\n            <div className=\"profile__name-info\">\n              <h1 className=\"profile__name\">{this.state.userName}</h1>\n              <button className=\"profile__edit-button\" type=\"button\" onClick={this.props.onEditProfile} aria-label=\"Редактировать информацию о пользователе.\"></button>\n            </div>\n            <p className=\"profile__description\">{this.state.userDescription}</p>\n          </div>\n          <button className=\"profile__add-button\" type=\"button\" onClick={this.props.onAddPlace} aria-label=\"Добавить фото.\"></button>\n        </section>\n\n        <section className=\"elements\">\n          {this.state.cards.map(card => (\n            <Card card={card} key={card._id} onCardClick={this.props.onCardClick} />\n          ))}\n        </section>\n      </main>\n    )\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;\n","import React from 'react';\n\nclass PopupWithForm extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className={this.props.isOpen ? `popup popup_type_${this.props.name} popup_opened` : `popup popup_type_${this.props.name}`}>\n        <form className=\"popup__form\" name={this.props.name} noValidate>\n          <h2 className=\"popup__title\">{this.props.title}</h2>\n          {this.props.children}\n          <button className=\"popup__save-button\" type=\"submit\">Ок</button>\n          <button className=\"popup__close-button\" type=\"button\" onClick={this.props.onClose} aria-label=\"Закрыть окно.\"></button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nclass ImagePopup extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className={this.props.card ? \"popup popup_type_open-photo popup_opened\" : \"popup popup_type_open-photo\"}>\n        <div className=\"popup__photo-container\">\n          <img className=\"popup__image\" src={this.props.card}/>\n          <h2 className=\"popup__heading\"></h2>\n          <button className=\"popup__close-button\" type=\"button\" onClick={this.props.onClose} aria-label=\"Закрыть окно.\"></button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: ''\n    }\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({\n      isEditAvatarPopupOpen: true\n    })\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({\n      isEditProfilePopupOpen: true\n    })\n  }\n\n  handleAddPlaceClick = () => {\n    this.setState({\n      isAddPlacePopupOpen: true\n    })\n  }\n\n  handleCardClick = (card) => {\n    this.setState({\n      selectedCard: card.link\n    })\n  }\n\n  closeAllPopups = () => {\n    this.setState({\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: ''\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <Header />\n        <Main\n          onEditProfile={this.handleEditProfileClick}\n          onAddPlace={this.handleAddPlaceClick}\n          onEditAvatar={this.handleEditAvatarClick}\n          onCardClick={this.handleCardClick}\n        />\n        <Footer />\n\n        <PopupWithForm name=\"edit-info\" title=\"Редактировать профиль\" isOpen={this.state.isEditProfilePopupOpen} onClose={this.closeAllPopups}>\n          <input className=\"popup__input popup__input_type_username\" id=\"username-input\" type=\"text\" name=\"username\"\n            placeholder=\"Имя пользователя\" required minLength=\"2\" maxLength=\"40\" pattern=\"[а-яА-Яa-zA-Z -]+\" />\n          <span className=\"popup__input-error\" id=\"username-input-error\"></span>\n          <input className=\"popup__input popup__input_type_description\" id=\"description-input\" type=\"text\" name=\"description\"\n            placeholder=\"О себе\" required minLength=\"2\" maxLength=\"200\" />\n          <span className=\"popup__input-error\" id=\"description-input-error\"></span>\n        </PopupWithForm>\n\n        <PopupWithForm name=\"add-photo\" title=\"Новое место\" isOpen={this.state.isAddPlacePopupOpen} onClose={this.closeAllPopups}>\n          <input className=\"popup__input popup__input_type_place\" id=\"place-input\" type=\"text\" name=\"name\"\n            placeholder=\"Название\" required maxLength=\"30\" />\n          <span className=\"popup__input-error\" id=\"place-input-error\"></span>\n          <input className=\"popup__input popup__input_type_link\" id=\"link-input\" type=\"url\" name=\"link\"\n            placeholder=\"Ссылка на картинку\" required />\n          <span className=\"popup__input-error\" id=\"link-input-error\"></span>\n        </PopupWithForm>\n\n        <PopupWithForm name=\"delete-photo\" title=\"Вы уверены?\" />\n\n        <PopupWithForm name=\"change-avatar\" title=\"Обновить аватар\" isOpen={this.state.isEditAvatarPopupOpen} onClose={this.closeAllPopups}>\n          <input className=\"popup__input popup__input_type_link\" id=\"avatar-link-input\" type=\"url\" name=\"link\"\n            placeholder=\"Ссылка на картинку\" required />\n          <span className=\"popup__input-error\" id=\"avatar-link-input-error\"></span>\n        </PopupWithForm>\n\n        <ImagePopup card={this.state.selectedCard} onClose={this.closeAllPopups} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.e889e45f.svg\";"],"sourceRoot":""}